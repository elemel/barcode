    cli + main; Run main
    hcf; Halt program

; [argc, argv] -> [exit_code]
main: .argc = 0, .argv = 1
    ent + 2, stl + .argc, stl + .argv
    0
.loop:
    dup, ldl + .argc, sub, beq + .break; Break after last argument
    dup, beq + .first; Skip space before first argument
    ' ', ldi + stdout, put; Write space to standard output
.first:
    dup, ldl + .argv, add, ldm; Load argument
    ldi + stdout, cli + print; Print argument to standard output
    adi + 1, bal + .loop; Next argument
.break:
    pop
    '\n', ldi + stdout, put; Write newline to standard output
    0, ret + 2

; [stream, string] -> []
print: .stream = 0
    ent + 1
    stl + .stream
.loop:
    dup, ldm; Load character
    dup, beq + .break; Break on null character
    ldl + .stream, put; Write character to stream
    adi + 1, bal + .loop; Next character
.break:
    pop, pop
    ret + 1
